import {hyper} from 'hyperhtml/esm';
import {BiotopeReduxStoreConnector} from "../../resources/ts/core/BiotopeReduxStoreConnector";
import {{properCase name}}ReducerCreator from './{{properCase name}}.reducer';
import { {{properCase name}}State } from './{{properCase name}}.state';

export class {{properCase name}} extends HTMLElement {
	static componentName = '{{dashCase name}}-component';
	private html: any;
	private uid: string;
	private storeConnector: BiotopeReduxStoreConnector<{{properCase name}}State>;

	constructor() {
		super();
		this.html = hyper.bind(this);
	}

	connectedCallback() {
		this.storeConnector = new BiotopeReduxStoreConnector<{{properCase name}}State>({
			store: window['biotope'].store,
			componentId: this.uid,
			reducerCreator: {{properCase name}}ReducerCreator,
			triggerOnStateChange: (state: {{properCase name}}State, lastState: {{properCase name}}State) => {}
		});
		this.uid = this.storeConnector.getComponentId();

    this.render(this.storeConnector.getState());
	}

  render(state: {{properCase name}}State) {
    return this.html`{{properCase name}}`;
  }
}
if (!customElements.get({{properCase name}}.componentName)) {
	customElements.define({{properCase name}}.componentName, {{properCase name}});
}
